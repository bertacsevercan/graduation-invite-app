{"ast":null,"code":"import _objectSpread from \"/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    isComing: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postedData = _useState4[0],\n      setPostedData = _useState4[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, datas;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/guests\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              datas = _context.sent;\n              console.log(\"fetch\", datas);\n              setData(datas);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var postData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:3000/guests\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  name: postedData.name,\n                  surname: postedData.surname,\n                  email: postedData.email,\n                  isComing: postedData.isComing\n                }),\n                headers: {\n                  \"Content-type\": \"application/json; charset=UTF-8 \"\n                }\n              });\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context2.sent;\n              console.log(\"post\", data);\n              setPostedData(data);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function postData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, [postedData.id]);\n\n  var handleChange = function handleChange(e) {\n    if (e.target.id === \"isComing\") {\n      setPostedData(_objectSpread(_objectSpread({}, postedData), {}, {\n        isComing: e.target.checked\n      }));\n    } else {\n      setPostedData(_objectSpread(_objectSpread({}, postedData), {}, {\n        [e.target.id]: e.target.value\n      }));\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(postedData);\n    postData();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"You are invited to my bootcamp graduation!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    placeholder: \"Name\",\n    value: postedData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"surname\",\n    placeholder: \"Surname\",\n    value: postedData.surname,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"Email\",\n    type: \"email\",\n    value: postedData.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"RSVP\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"isComing\",\n    onChange: handleChange,\n    type: \"checkbox\",\n    value: postedData.isComing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guests-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Guests\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"allGuests-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \" Full Name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \" Email \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \" Coming? \")), data.map(function (obj, index) {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, obj.name, \" \" + obj.surname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, obj.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \" \" + obj.isComing));\n  }))));\n}","map":{"version":3,"sources":["/Users/bertacsevercan/Desktop/git-repos/graduation-invite-app/front-end/src/App.js"],"names":["React","useEffect","useState","App","data","setData","name","surname","email","isComing","postedData","setPostedData","fetchData","fetch","response","json","datas","console","log","postData","method","body","JSON","stringify","headers","res","id","handleChange","e","target","checked","value","handleSubmit","preventDefault","map","obj","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [postedData, setPostedData] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    isComing: false\n  });\n  const fetchData = async () => {\n    const response = await fetch(\"http://localhost:3000/guests\");\n    const datas = await response.json();\n    console.log(\"fetch\", datas);\n    setData(datas);\n  };\n\n  const postData = async () => {\n    const res = await fetch(`http://localhost:3000/guests`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: postedData.name,\n        surname: postedData.surname,\n        email: postedData.email,\n        isComing: postedData.isComing\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8 \"\n      }\n    });\n    const data = await res.json();\n    console.log(\"post\", data);\n    setPostedData(data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, [postedData.id]);\n\n  const handleChange = (e) => {\n    if (e.target.id === \"isComing\") {\n      setPostedData({\n        ...postedData,\n        isComing: e.target.checked\n      });\n    } else {\n      setPostedData({\n        ...postedData,\n        [e.target.id]: e.target.value\n      });\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(postedData);\n    postData();\n  };\n\n  return (\n    <div className=\"App\">\n      <h3>You are invited to my bootcamp graduation!</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"name\"\n          placeholder=\"Name\"\n          value={postedData.name}\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          id=\"surname\"\n          placeholder=\"Surname\"\n          value={postedData.surname}\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          id=\"email\"\n          placeholder=\"Email\"\n          type=\"email\"\n          value={postedData.email}\n          onChange={handleChange}\n        />\n        <br />\n        <label>RSVP</label>\n        <input\n          id=\"isComing\"\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={postedData.isComing}\n        />\n        <br />\n        <button>Submit</button>\n      </form>\n\n      <div className=\"guests-wrapper\">\n        <h3>Guests</h3>\n        <table className=\"allGuests-table\">\n          <thead>\n            <th> Full Name </th>\n            <th> Email </th>\n            <th> Coming? </th>\n          </thead>\n\n          {data.map((obj, index) => (\n            <tbody key={index}>\n              <td>\n                {obj.name}\n                {\" \" + obj.surname}\n              </td>\n              <td>{obj.email}</td>\n              <td>{\" \" + obj.isComing}</td>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}